{"version":3,"file":"static/css/main.c50d1b58.chunk.css","sources":["webpack:///node_modules/@sebgroup/bootstrap/scss/bootstrap-core/mixins/_breakpoints.scss","webpack:///src/WizardHeader/WizardHeader.scss","webpack:///src/WizardSteps/components/WizardNavigation/WizardNavigation.scss","webpack:///src/WizardSteps/components/WizardNavigations/WizardNavigations.scss","webpack:///src/WizardSteps/components/WizardControls/WizardControls.scss","webpack:///src/WizardSteps/components/WizardStep/WizardStep.scss","webpack:///src/WizardSteps/WizardSteps.scss"],"sourcesContent":["// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","@import 'src/styles';\r\n\r\n.wizard-header {\r\n  .navbar {\r\n    height: $wizard-header-height;\r\n  }\r\n}\r\n\r\n.wizard-actions {\r\n  button {\r\n    &:nth-of-type(n + 2) {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n}\r\n","@import 'src/styles';\r\n\r\nli.list-group-item.wizard-navigation {\r\n  position: relative;\r\n  padding: 1rem;\r\n  border-top: 1px solid transparent;\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 3.5rem;\r\n    padding: 1rem 2.5rem;\r\n    font-weight: inherit;\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n\r\n  &::before {\r\n    position: relative;\r\n    width: auto;\r\n    font-weight: inherit;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 1.25rem;\r\n    right: 1rem;\r\n    width: 1rem;\r\n    height: 1rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &--info {\r\n    &::after {\r\n      background: url('../../../assets/icons/info-state.svg') no-repeat center;\r\n    }\r\n  }\r\n\r\n  &--warning {\r\n    &::after {\r\n      border-radius: 3px;\r\n      background: url('../../../assets/icons/warning-state.svg') no-repeat\r\n        center;\r\n      background-color: black;\r\n      background-size: cover;\r\n    }\r\n  }\r\n\r\n  &--danger {\r\n    &::after {\r\n      background: url('../../../assets/icons/danger-state.svg') no-repeat center;\r\n    }\r\n  }\r\n\r\n  &--success,\r\n  &--passed {\r\n    background-color: $gray-100;\r\n\r\n    &::after {\r\n      background: url('../../../assets/icons/check.svg') no-repeat center;\r\n    }\r\n  }\r\n\r\n  &:hover,\r\n  &--active {\r\n    &:not(.list-group-item--disabled) {\r\n      font-weight: $font-weight-medium;\r\n      background-color: $white;\r\n      box-shadow: 0 0 0.5rem rgba($black, 0.15);\r\n\r\n      a {\r\n        font-weight: inherit;\r\n      }\r\n    }\r\n  }\r\n\r\n  &--disabled {\r\n    a {\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n}\r\n","@import 'src/styles';\r\n\r\n$animation-duration: 400ms;\r\n$animation-timing: ease-in-out;\r\n\r\n.wizard-navigations {\r\n  &__toggle {\r\n    cursor: pointer;\r\n\r\n    &::after {\r\n      content: '';\r\n      width: 1.5rem;\r\n      height: 1.5rem;\r\n      margin-top: 3px;\r\n      margin-right: 1rem;\r\n      background: url('../../../assets/icons/chevron-down.svg') no-repeat center;\r\n      transform: rotate(0deg);\r\n      transition: all $animation-duration $animation-timing;\r\n    }\r\n\r\n    &--active {\r\n      &::after {\r\n        transform: rotate(-180deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  .list-group {\r\n    &.list-group-ordered {\r\n      counter-reset: list-order;\r\n    }\r\n  }\r\n}\r\n\r\n@include media-breakpoint-down(sm) {\r\n  .wizard-navigations {\r\n    .list-group {\r\n      &-enter {\r\n        opacity: 0;\r\n        transform: scaleY(0.5);\r\n      }\r\n\r\n      &-enter-active {\r\n        opacity: 1;\r\n        transform: scaleY(1);\r\n        transform-origin: top;\r\n        transition: opacity $animation-duration $animation-timing,\r\n          transform $animation-duration $animation-timing;\r\n      }\r\n\r\n      &-exit {\r\n        opacity: 1;\r\n        transform: scaleY(1);\r\n      }\r\n\r\n      &-exit-active {\r\n        opacity: 0;\r\n        transform: scaleY(0);\r\n        transform-origin: top;\r\n        transition: opacity $animation-duration $animation-timing,\r\n          transform $animation-duration $animation-timing;\r\n      }\r\n\r\n      &-exit-done {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@import 'src/styles';\r\n\r\n.wizard-controls {\r\n  .btn {\r\n    text-transform: capitalize;\r\n  }\r\n}\r\n","@import 'src/styles';\r\n\r\n.wizard-main {\r\n  max-width: $wizard-content-max-width;\r\n}\r\n\r\n.wizard-secondary-content {\r\n}\r\n\r\n@include media-breakpoint-up(md) {\r\n  .wizard-step {\r\n    max-height: calc(\r\n      100vh - #{$wizard-step-spacing} - #{$wizard-controls-height}\r\n    );\r\n    overflow-y: auto;\r\n  }\r\n\r\n  // increase selector specificity to avoid storybook namespace clutter\r\n  .container-fluid {\r\n    .wizard-controls {\r\n      position: fixed;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: $wizard-navigation-width;\r\n      padding: $spacer;\r\n      border-top: 1px solid $gray-300;\r\n      background: $white;\r\n      transition: all 0.4s ease-out;\r\n\r\n      .form-row {\r\n        max-width: $wizard-content-max-width;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@import 'src/styles';\r\n\r\n.wizard-main-container {\r\n  min-width: 0;\r\n}\r\n\r\n@include media-breakpoint-up(md) {\r\n  .wizard-steps {\r\n    .wizard-navigations {\r\n      width: $wizard-navigation-width;\r\n      height: 100vh;\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AA4DA;ACzDA;ACDA;ACIA;ACHA;ACDA;ACAA;","sourceRoot":""}